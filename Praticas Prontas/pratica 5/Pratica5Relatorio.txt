Paradigmas de Programação
Relatório Prática 5
Alunos: 
Pedro van Rooij Costa
Nelson Mariano Leite Neto
Bruno Freitas

Roteiro 1:

	Exercicio 1:	
	codigo fornecido:

		f x = case x of
		{ 0 -> 1; 1 -> 5; 2 -> 2; _ -> 1 }
	codigo indentado:
		
		f x = case x of
			0 -> 1
			1 -> 5
			2 -> 2
			_ -> 1 

	Exercicio 2:
	
	codigo fornecido:
	
		quicksort :: (Ord a) => [a] -> [a]
		quicksort [] = []
		quicksort (x:xs) = 
			quicksort lt ++ [x] ++ quicksort ge
			where
				lt = [y | y <- xs, y < x]
				ge = [y | y <- xs, y >= x]

	codigo sem indentacao:

	quicksort :: (Ord a) => [a] -> [a]
	quicksort [] = []
	quicksort (x:xs) = quicksort lt ++ [x] ++ quicksort ge where {lt = [y | y <- xs, y < x];ge = [y | y <- 		xs, y >= x]}

Roteiro 2:

	1. [x|x <- [1..1000]]
	2. [x|x <- [1..99], x `mod` 3 == 0] ou [x|x <- [1,4..99]]
	3. [ 2^i | i<-[1..1000], i <= 50]
	4. [product [1..i] | i <- [1..1000],i == 50]
